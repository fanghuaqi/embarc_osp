<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structdev__gpio" kind="struct" language="C++" prot="public">
    <compoundname>dev_gpio</compoundname>
    <includes refid="dev__gpio_8h" local="no">dev_gpio.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdev__gpio_1ad9ee0de0f2f120a328ceaf891a2e6a6b" prot="public" static="no" mutable="no">
        <type><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga87e9eab1a73f62b5d21cc109b19d5db9" kindref="member">DEV_GPIO_INFO</ref></type>
        <definition>DEV_GPIO_INFO dev_gpio::gpio_info</definition>
        <argsstring></argsstring>
        <name>gpio_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gpio device information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" line="409" column="1" bodyfile="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" bodystart="409" bodyend="-1"/>
        <referencedby refid="dw__gpio_8h_1a14a05d1eec248e95cb142d6419c1a095" compoundref="dw__gpio_8c" startline="513" endline="549">dw_gpio_bit_isr_handler</referencedby>
        <referencedby refid="dw__gpio_8h_1a9380ba6d879c34a642e949b3d4b63b38" compoundref="dw__gpio_8c" startline="288" endline="324">dw_gpio_close</referencedby>
        <referencedby refid="dw__gpio_8h_1aded8e591ccd8f0c63e0516dc7776d3f7" compoundref="dw__gpio_8c" startline="370" endline="470">dw_gpio_control</referencedby>
        <referencedby refid="dw__gpio_8h_1a21733bb0557ceb1ec260ce52d31b4f1f" compoundref="dw__gpio_8c" startline="473" endline="510">dw_gpio_isr_handler</referencedby>
        <referencedby refid="dw__gpio_8h_1a14067525e0a0bf4a46bfd3e3627a031b" compoundref="dw__gpio_8c" startline="238" endline="285">dw_gpio_open</referencedby>
        <referencedby refid="dw__gpio_8h_1a16f24a522be708f9ce711efd42cddabf" compoundref="dw__gpio_8c" startline="327" endline="347">dw_gpio_read</referencedby>
        <referencedby refid="dw__gpio_8h_1a48005fdc99ba27845d549b06eb2049d9" compoundref="dw__gpio_8c" startline="350" endline="367">dw_gpio_write</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga5127296ba57626bc984aa48d6ee5f010" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_gpio::gpio_open)(uint32_t dir)</definition>
        <argsstring>)(uint32_t dir)</argsstring>
        <name>gpio_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open gpio device with pre-defined gpio direction</para><para>Open a gpio device with pre-defined io direction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dir</parametername>
</parameternamelist>
<parameterdescription>
<para>gpio direction for each bit </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>If device was opened before with different parameters, then just increase the <ref refid="structdev__gpio__info_1a44feae265065db66d495eeeff034cc26" kindref="member">opn_cnt</ref> and return <ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gaa5935765e74b9d1a7e72c9c8f9018b42" kindref="member">E_OPNED</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Open settings are not supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" line="410" column="1" bodyfile="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1gacbf9ba33414dd4d1dc01995b7c4fc52e" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_gpio::gpio_close)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>gpio_close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>close gpio device</para><para>Close an gpio device, just decrease the <ref refid="structdev__gpio__info_1a44feae265065db66d495eeeff034cc26" kindref="member">opn_cnt</ref>, if <ref refid="structdev__gpio__info_1a44feae265065db66d495eeeff034cc26" kindref="member">opn_cnt</ref> equals 0, then close the device <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Close successfully without any issues(including scenario that device is already closed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still opened, the device <ref refid="structdev__gpio__info_1a44feae265065db66d495eeeff034cc26" kindref="member">opn_cnt</ref> decreased by 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" line="411" column="1" bodyfile="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga659dba8a34f6d83194be83c3bdee0677" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_gpio::gpio_control)(uint32_t ctrl_cmd, void *param)</definition>
        <argsstring>)(uint32_t ctrl_cmd, void *param)</argsstring>
        <name>gpio_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>control gpio device</para><para>Control an gpio device by ctrl_cmd, with passed param. you can control gpio device using predefined gpio control commands defined using <ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_f_c_m_d_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref> (which must be implemented by bsp developer), such as <ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___c_t_r_l_c_m_d_1gadf2e3c74bf24056161b11fe605ae2465" kindref="member">change masked gpio direction to input</ref>, and <ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___c_t_r_l_c_m_d" kindref="compound">more</ref>. And you can also control gpio device using your own specified commands defined using <ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_f_c_m_d_1gafe70e244452c1c2f5235b85cadf602bb" kindref="member">DEV_SET_USRCMD</ref>, but these specified commands should be defined in your own gpio device driver implementation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctrl_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___c_t_r_l_c_m_d" kindref="compound">control command</ref>, to change or get some thing related to gpio </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">param</parametername>
</parameternamelist>
<parameterdescription>
<para>parameters that maybe argument of the command, or return values of the command </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CLSED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is not opened </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to hardware issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to different reasons like in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Control command is not supported or not valid, such as interrupt is not supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" line="412" column="1" bodyfile="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga70bd322128648796b6652e4026a2eb91" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_gpio::gpio_write)(uint32_t val, uint32_t mask)</definition>
        <argsstring>)(uint32_t val, uint32_t mask)</argsstring>
        <name>gpio_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>write gpio device with val, only write the masked bits</para><para>Write gpio with val, and only change the masked bits of gpio. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>the data that need to write to gpio </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>gpio bit mask </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Write gpio with specified value successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" line="413" column="1" bodyfile="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga0583a36e5d0aab4bd914c34bb44832c9" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* dev_gpio::gpio_read)(uint32_t *val, uint32_t mask)</definition>
        <argsstring>)(uint32_t *val, uint32_t mask)</argsstring>
        <name>gpio_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read gpio device val, only read the masked bits</para><para>Read the masked gpio value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">val</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data need to read from gpio </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>gpio bit mask </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Read gpio data successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" line="414" column="1" bodyfile="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>gpio device interface definition </para>    </briefdescription>
    <detaileddescription>
<para>define gpio device interface, like gpio information structure, fuctions to open/close/control gpio, write or read data via gpio <simplesect kind="note"><para>all this details are implemented by user in user porting code </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="53">
        <label>dev_gpio</label>
        <link refid="structdev__gpio"/>
        <childnode refid="54" relation="usage">
          <edgelabel>+gpio_info</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>dev_gpio_info</label>
        <link refid="structdev__gpio__info"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" line="408" column="1" bodyfile="C:/Users/qiangg/Documents/code/snps_embarc_osp_doc/device/ip/ip_hal/inc/dev_gpio.h" bodystart="408" bodyend="415"/>
    <listofallmembers>
      <member refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1gacbf9ba33414dd4d1dc01995b7c4fc52e" prot="public" virt="non-virtual"><scope>dev_gpio</scope><name>gpio_close</name></member>
      <member refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga659dba8a34f6d83194be83c3bdee0677" prot="public" virt="non-virtual"><scope>dev_gpio</scope><name>gpio_control</name></member>
      <member refid="structdev__gpio_1ad9ee0de0f2f120a328ceaf891a2e6a6b" prot="public" virt="non-virtual"><scope>dev_gpio</scope><name>gpio_info</name></member>
      <member refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga5127296ba57626bc984aa48d6ee5f010" prot="public" virt="non-virtual"><scope>dev_gpio</scope><name>gpio_open</name></member>
      <member refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga0583a36e5d0aab4bd914c34bb44832c9" prot="public" virt="non-virtual"><scope>dev_gpio</scope><name>gpio_read</name></member>
      <member refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga70bd322128648796b6652e4026a2eb91" prot="public" virt="non-virtual"><scope>dev_gpio</scope><name>gpio_write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
